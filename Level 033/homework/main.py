"""1) ახსენი  რას ნიშნავს “default value” ფუნქციის პარამეტრებში.
2) ახსენით return ის მნიშვნელობა.
3) შექმენით ფუნქცია სახელწოდებით substract, რომელსაც არგუმენტად ორ რიცხვს. ფუნქციამ პასუხად უნდა დააბრუნოს ამ რიცხვების სხვაობა.
4)  შექმენით ფუნქცია სახელწოდებით multiply, რომელსაც არგუმენტად ორ რიცხვს. ფუნქციამ პასუხად უნდა დააბრუნოს ამ რიცხვების ნამრავლი.
5) შექმენით ფუნქცია სახელწოდებით divide, რომელსაც არგუმენტად ორ რიცხვს. ფუნქციამ პასუხად უნდა დააბრუნოს ამ რიცხვების განაყოფი."""

# 1) default value არის არგუმენტის ადგილას გადაცემული მნიშვნელობა მაგ: def lst(lst=[10,20,30]) ეს უკვე არგუმენტის ადგილას გადასცემს ფუნქციას მნიშვნელობას გამოძახების ადგილას აღარ არის საჭირო ამის შემდეგ უკვე ფუნქციას აქვს მნიშვნელობა (არგუმენტი შიგნით) ეს არის "default value" ყველაზე სასარგებლოა რადგან ფუნქციის შიგნით ვაძლევთ მნიშვნელობას და არა გამოძახებისას ორივე კარგი პრაქტიკა თუმცა ეს უკეთესია.

# 2) return ფუნქციის გარეთ აბრუნებს მნიშვნელობას ის არ არის ხილვადი, არ გამოისახება ისე როგორც print ფუნქცია ამიტომ რადგან ის ფუნქციის გარეთ აბრუნებს მნიშვნელობას მას ვერ ვხედავთ ჩვენ როდესაც return ს ვიყენებთ ფუნქციის გამოძახება აუცილებელია print ით რადგან გამოჩნდეს და იყოს ხილვადი ეკრანზე ხოლო როცა print ით ფუნქციის შიგნით ვაბრუნებთ მნიშვნელობას უკვე ვიძახებთ ცარიელი ფუნქციის სახელს ბრჩხილებში შემდეგნაირად:

# return --> print(greet("Hi"))

# print --> greet("Hi")

# 3)
'''def substract(x,y):
    return x - y
print(substract(10,20))'''

# 4)
'''def multiply(z,b):
    return z * b
print(multiply(50,80))'''

'''def divide(y,z):
    return y / z
print(divide(100,120))'''